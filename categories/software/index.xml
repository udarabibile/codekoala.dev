<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Software on Code Koala</title>
    <link>https://udarabibile.github.io/codekoala.dev/categories/software/</link>
    <description>Recent content in Software on Code Koala</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Tue, 24 Sep 2019 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://udarabibile.github.io/codekoala.dev/categories/software/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SQL Snippet: Foreign Keys</title>
      <link>https://udarabibile.github.io/codekoala.dev/blog/sql-snippet-foreign-keys/</link>
      <pubDate>Tue, 24 Sep 2019 00:00:00 +0000</pubDate>
      <guid>https://udarabibile.github.io/codekoala.dev/blog/sql-snippet-foreign-keys/</guid>
      <description>If you have worked with SQL based database, I guess y’all are familiar with usage of foreign keys to manage relationship between tables.&#xA;Relationship Types Lets dive into a famous example involving book — author connection to gain insight. There are variety of connection between these entities, in a graphical:&#xA;one to one →an author can write only one book, and a book only have one author. one to many →an author can write multiple books, but book can only have one author.</description>
    </item>
  </channel>
</rss>
