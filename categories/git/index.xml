<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Git on Code Koala</title>
    <link>http://codekoala.net/categories/git/</link>
    <description>Recent content in Git on Code Koala</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Tue, 28 Apr 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://codekoala.net/categories/git/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Understanding Git under the hood</title>
      <link>http://codekoala.net/blog/2020/git-understanding-under-the-hoot/</link>
      <pubDate>Tue, 28 Apr 2020 00:00:00 +0000</pubDate>
      <guid>http://codekoala.net/blog/2020/git-understanding-under-the-hoot/</guid>
      <description>Most developers are familiar with version control system and git is de facto choice for most cases. This article is actually to introduce how git works, and this will enable for developers to understand git better.&#xA;Git is distributed version control where history of file and directory changes are stored such that developers can travel through time to gather how all the changes happened. Initially git was created by Linux creator to manage Linux kernel development when having multiple open-source developer.</description>
    </item>
    <item>
      <title>NodeJS Snippet: Child Process</title>
      <link>http://codekoala.net/blog/nodejs-snippet-child-process/</link>
      <pubDate>Fri, 24 Jan 2020 00:00:00 +0000</pubDate>
      <guid>http://codekoala.net/blog/nodejs-snippet-child-process/</guid>
      <description>Node.js is single-threaded by design, thereby requiring it to keep the main Node process unblocked to continue execution. Moreover, Node is limited to one thread and 1.76GB (for 64-bit OS) memory usage. Thus, external processes are required to offload CPU intensive processing in parallel. The child_process module in Node allows us to spawn processes that can be used for any task to be run in parallel.&#xA;Builtin Node.js module: child_process The Node module child_process allows us to create new processes and to offload tasks to be processed in parallel in the background without blocking the single main thread.</description>
    </item>
  </channel>
</rss>
