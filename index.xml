<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Code Koala</title>
    <link>https://udarabibile.github.io/codekoala.dev/</link>
    <description>Recent content on Code Koala</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Tue, 28 Apr 2020 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://udarabibile.github.io/codekoala.dev/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Understanding Git under the hood</title>
      <link>https://udarabibile.github.io/codekoala.dev/blog/2020/git-understanding-under-the-hoot/</link>
      <pubDate>Tue, 28 Apr 2020 00:00:00 +0000</pubDate>
      <guid>https://udarabibile.github.io/codekoala.dev/blog/2020/git-understanding-under-the-hoot/</guid>
      <description>Most developers are familiar with version control system and git is de facto choice for most cases. This article is actually to introduce how git works, and this will enable for developers to understand git better.&#xA;Git is distributed version control where history of file and directory changes are stored such that developers can travel through time to gather how all the changes happened. Initially git was created by Linux creator to manage Linux kernel development when having multiple open-source developer.</description>
    </item>
    <item>
      <title>Linux Snippet: File Permissions &amp; Ownership</title>
      <link>https://udarabibile.github.io/codekoala.dev/blog/linux-permissions-and-ownership/</link>
      <pubDate>Mon, 30 Mar 2020 00:00:00 +0000</pubDate>
      <guid>https://udarabibile.github.io/codekoala.dev/blog/linux-permissions-and-ownership/</guid>
      <description>Users familiar with Linux based operating systems should have at least once come across issues related to Permission denied when executing some commands in the terminal. This article aims to shed some light on user permissions and ownership related to files and directories.&#xA;In order to get an introduction to permissions and ownership, in the terminal, navigate to a location where files resides and execute ls -al to list files and directories with all associated details.</description>
    </item>
    <item>
      <title>NodeJS Snippet: Child Process</title>
      <link>https://udarabibile.github.io/codekoala.dev/blog/nodejs-snippet-child-process/</link>
      <pubDate>Fri, 24 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://udarabibile.github.io/codekoala.dev/blog/nodejs-snippet-child-process/</guid>
      <description>Node.js is single-threaded by design, thereby requiring it to keep the main Node process unblocked to continue execution. Moreover, Node is limited to one thread and 1.76GB (for 64-bit OS) memory usage. Thus, external processes are required to offload CPU intensive processing in parallel. The child_process module in Node allows us to spawn processes that can be used for any task to be run in parallel.&#xA;Builtin Node.js module: child_process The Node module child_process allows us to create new processes and to offload tasks to be processed in parallel in the background without blocking the single main thread.</description>
    </item>
    <item>
      <title>NodeJS Architecture &amp; Concurrency Model</title>
      <link>https://udarabibile.github.io/codekoala.dev/blog/2020/nodejs-architecture-and-concurrency-model/</link>
      <pubDate>Wed, 15 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://udarabibile.github.io/codekoala.dev/blog/2020/nodejs-architecture-and-concurrency-model/</guid>
      <description>Hope y&amp;rsquo;all are familiar with basics of node.js and how its a popular choice for making server applications. This article aims to shed some light on node.js architecture and how it works internally.&#xA;JavaScript on browser and JavaScript Runtimes JavaScript language is popularly used for web pages and to make them interactive. Thereby javascript code is required to be interpreted by browsers to show as web pages, and this is done by JavaScript Engine.</description>
    </item>
    <item>
      <title>SQL Snippet: Foreign Keys</title>
      <link>https://udarabibile.github.io/codekoala.dev/blog/sql-snippet-foreign-keys/</link>
      <pubDate>Tue, 24 Sep 2019 00:00:00 +0000</pubDate>
      <guid>https://udarabibile.github.io/codekoala.dev/blog/sql-snippet-foreign-keys/</guid>
      <description>If you have worked with SQL based database, I guess y’all are familiar with usage of foreign keys to manage relationship between tables.&#xA;Relationship Types Lets dive into a famous example involving book — author connection to gain insight. There are variety of connection between these entities, in a graphical:&#xA;one to one →an author can write only one book, and a book only have one author. one to many →an author can write multiple books, but book can only have one author.</description>
    </item>
    <item>
      <title>Introduction to React Context API</title>
      <link>https://udarabibile.github.io/codekoala.dev/blog/introduction-to-react-context-api/</link>
      <pubDate>Sat, 20 Jul 2019 00:00:00 +0000</pubDate>
      <guid>https://udarabibile.github.io/codekoala.dev/blog/introduction-to-react-context-api/</guid>
      <description>From React’s version 16.3.0, Context API is officially released to avoid props drilling to child components.&#xA;In order to understand use of React context and its application, lets look into what complication its trying to fix.&#xA;import React from &amp;#39;react&amp;#39;; const App = () =&amp;gt; { return &amp;lt;Menu colour=&amp;#34;blue&amp;#34; language=&amp;#34;en&amp;#34; /&amp;gt;; } function Menu(props) { return( &amp;lt;MenuItem colour={props.colour} language={props.language} /&amp;gt; ) } function MenuItem(props) { return( &amp;lt;div&amp;gt; &amp;lt;p&amp;gt;Theme colour: {props.colour}&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;Locale: {props.</description>
    </item>
    <item>
      <title>Introduction to React Hooks</title>
      <link>https://udarabibile.github.io/codekoala.dev/blog/introduction-to-react-hooks/</link>
      <pubDate>Fri, 19 Jul 2019 00:00:00 +0000</pubDate>
      <guid>https://udarabibile.github.io/codekoala.dev/blog/introduction-to-react-hooks/</guid>
      <description>From React’s version 16.8.0, Hooks are introduced to make functional components more useful.&#xA;TODO: MAKE MORE WIDTH&#xA;In React, class components are stateful and smart, being state is attached to it and kept persistent through renders. Then functional components were stateless and dumb components, having nor state nor logic attached to it.&#xA;As an example, class component can have state, and it could be manipulated using lifecycle methods such as constructor, componentDidMount and such.</description>
    </item>
    <item>
      <title>À propos de Hugo</title>
      <link>https://udarabibile.github.io/codekoala.dev/about/_index.fr/</link>
      <pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate>
      <guid>https://udarabibile.github.io/codekoala.dev/about/_index.fr/</guid>
      <description>Hugo est un moteur de site statique écrit en Go.&#xA;Il utilise une variété de projets open source, notamment:&#xA;[Cobra] (https://github.com/spf13/cobra) [Viper] (https://github.com/spf13/viper) [J Walter Weatherman] (https://github.com/spf13/jWalterWeatherman) [Cast] (https://github.com/spf13/cast) En savoir plus et contribuer sur [GitHub] (https://github.com/spf13).&#xA;Installer Quelques faits amusants sur [Hugo] (http://gohugo.io/):&#xA;Construit en [Go] (http://golang.org/) Librement inspiré par [Jekyll] (http://jekyllrb.com/) Principalement développé par [spf13] (http://spf13.com/) dans le train lors d&amp;rsquo;un trajet aller-retour pour Manhattan. Codé dans [Vim] (http://vim.</description>
    </item>
    <item>
      <title>O Hugo</title>
      <link>https://udarabibile.github.io/codekoala.dev/about/_index.pl/</link>
      <pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate>
      <guid>https://udarabibile.github.io/codekoala.dev/about/_index.pl/</guid>
      <description>Hugo to statyczny silnik strony napisany w Go.&#xA;Korzysta z różnych projektów open source, w tym:&#xA;[Cobra] (https://github.com/spf13/cobra) [Viper] (https://github.com/spf13/viper) [J Walter Weatherman] (https://github.com/spf13/jWalterWeatherman) [Cast] (https://github.com/spf13/cast) Dowiedz się więcej i wesprzyj na [GitHub] (https://github.com/spf13).&#xA;Ustawiać Kilka ciekawych faktów na temat [Hugo] (http://gohugo.io/):&#xA;Wbudowany [Go] (http://golang.org/) Luźno zainspirowany przez [Jekyll] (http://jekyllrb.com/) Głównie opracowany przez [spf13] (http://spf13.com/) w pociągu podczas podróży do iz Manhattanu. Zakodowane w [Vim] (http://vim.org) przy użyciu [spf13-vim] (http://vim.spf13.com/) Masz pytania lub sugestie?</description>
    </item>
    <item>
      <title>Sobre Hugo</title>
      <link>https://udarabibile.github.io/codekoala.dev/about/_index.pt/</link>
      <pubDate>Wed, 09 Apr 2014 00:00:00 +0000</pubDate>
      <guid>https://udarabibile.github.io/codekoala.dev/about/_index.pt/</guid>
      <description>Hugo é um gerador de site escrito em Go.&#xA;Ele utiliza vários projetos open source, incluindo:&#xA;Cobra Viper J Walter Weatherman Cast Aprenda mais e contribua no GitHub.&#xA;Setup Algumas curiosidades sobre Hugo:&#xA;Feito com Go Loosely inspired by Jekyll Inicialmente desenvolvido by spf13 em um trem enquanto viajava de e para Manhattan. Codificado no Vim usando spf13-vim Alguma pergunta ou sugestão? Está livre para abrir uma issue no GitHub ou perguntar no Twitter.</description>
    </item>
    <item>
      <title>Contact</title>
      <link>https://udarabibile.github.io/codekoala.dev/contact/_index.fr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://udarabibile.github.io/codekoala.dev/contact/_index.fr/</guid>
      <description></description>
    </item>
    <item>
      <title>Contact</title>
      <link>https://udarabibile.github.io/codekoala.dev/contact/_index.pl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://udarabibile.github.io/codekoala.dev/contact/_index.pl/</guid>
      <description></description>
    </item>
    <item>
      <title>Contato</title>
      <link>https://udarabibile.github.io/codekoala.dev/contact/_index.br/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://udarabibile.github.io/codekoala.dev/contact/_index.br/</guid>
      <description></description>
    </item>
  </channel>
</rss>
